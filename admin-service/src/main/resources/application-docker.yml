server:
  port: 8082
#  servlet:
#    context-path: /skill-tracker

resilience4j.circuitbreaker:
  instances:
    engineer-service:
      failureRateThreshold: 50
      minimumNumberOfCalls: 5
      slidingWindowType: TIME_BASED
      slidingWindowSize: 2
      waitDurationInOpenState: 1000s
      permittedNumberOfCallsInHalfOpenState: 4

spring:
  application:
    name: admin-service
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

  cloud:
    fienClient:
      url: http://engineer-service:8081/skill-tracker

  data:
    mongodb:
      database: skill_tracker_db
      host: mongo
      port: 27017
      uri: mongodb://mongo:27017
      #username: mongo
      #password: mongo

  kafka:
    topic:
      name: profile_topic
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#      properties:
#        spring.json.trusted.packages: *
#        spring.json.type.mapping:
#          event: com.iiht.fse4.skilltracker.common.model.ProfileEvent
      auto-offset-reset: earliest
      groupId: admin-service
    bootstrap-servers: kafka:9092

### Actuator ###
management:
  endpoint:
    health:
      show-details: "always"
  info:
    git:
      mode: "full"
  endpoints:
    web:
      ## Custom base path for Actuator
      base-path: /actuator
      exposure:
        include: "health,info"

### EUREKA ###
eureka:
  client:
    service-url:
      defaultZone: http://eurekaservice:8761/skill-tracker/eureka/

    register-with-eureka: true
    fetch-registry: true
  instance:
    lease-renewal-interval-in-seconds: 30
    instance-id: ${spring.application.name}:${random.uuid}
    hostname: eurekaservice
