-- Database: skill_tracker_db

-- DROP DATABASE IF EXISTS skill_tracker_db;


-- SELECT 'CREATE DATABASE skill_tracker_db WITH
--     OWNER = postgres
--     ENCODING = UTF8
--     TABLESPACE = pg_default
--     CONNECTION LIMIT = -1
--     IS_TEMPLATE = False'
--     WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = 'skill_tracker_db')

-- CREATE DATABASE skill_tracker_db
--     WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = 'skill_tracker_db')
--     WITH
--     OWNER = postgres
--     ENCODING = 'UTF8'
--     TABLESPACE = pg_default
--     CONNECTION LIMIT = -1
--     IS_TEMPLATE = False;

COMMENT ON DATABASE skill_tracker_db
    IS 'Skill Tracker Database';

CREATE SCHEMA IF NOT EXISTS skilltracker
    AUTHORIZATION postgres;

COMMENT ON SCHEMA skilltracker
    IS 'skilltracker schema';

GRANT ALL ON SCHEMA public TO postgres;


CREATE TABLE IF NOT EXISTS skilltracker.user_info (
                                        user_info_id INT8 NOT NULL,
                                        user_name VARCHAR(30) NOT NULL,
                                        password VARCHAR(500) NOT NULL,
                                        user_first_name VARCHAR(100) NOT NULL,
                                        user_last_name VARCHAR(100) NOT NULL,
                                        user_email VARCHAR(150) NOT null,
                                        user_role VARCHAR(25) NOT NULL DEFAULT 'FSE',
                                        token VARCHAR(500) NULL,
                                        created_date TIMESTAMP NOT NULL default CURRENT_TIMESTAMP,
                                        updated_date TIMESTAMP NULL,
                                        CONSTRAINT "primary" PRIMARY KEY (user_info_id)
);

CREATE SEQUENCE IF NOT EXISTS skilltracker.user_info_id_seq START 10000 INCREMENT 1;

INSERT INTO skilltracker.user_info
(user_info_id, user_name, password, user_first_name, user_last_name, user_email, user_role)
values
    (nextval('skilltracker.user_info_id_seq'),'FSEUser1', 'user1@123','User1 First', 'User1 Last', 'user1@fse.com', 'User'),
    (nextval('skilltracker.user_info_id_seq'),'FSEUser2', 'user2@123','User2 First', 'User2 Last', 'user2@fse.com', 'User'),
    (nextval('skilltracker.user_info_id_seq'),'FSEUser3', 'user3@123','User3 First', 'User3 Last', 'user3@fse.com', 'User'),
    (nextval('skilltracker.user_info_id_seq'),'FSEUser4', 'user4@123','User4 First', 'User4 Last', 'user4@fse.com', 'User'),
    (nextval('skilltracker.user_info_id_seq'),'FSEUser5', 'user5@123','User5 First', 'User5 Last', 'user5@fse.com', 'User'),
    (nextval('skilltracker.user_info_id_seq'),'FSEAdmin1', 'admin1@123','Admin1 First', 'Admin1 Last', 'admin1@fse.com', 'Admin');

CREATE TABLE IF NOT EXISTS skilltracker.skills
(
    skill_id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    skill_name      VARCHAR(100)          NOT NULL,
    skill_type      VARCHAR(45)          NOT NULL,
    expertise_level INT                   NULL,
    profile_ref_id  BIGINT                NULL,
    CONSTRAINT pk_skills PRIMARY KEY (skill_id)
);

CREATE TABLE IF NOT EXISTS skilltracker.profiles
(
    profile_id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    profile_name      VARCHAR(100)         NOT NULL,
    associate_id      VARCHAR(30)          NOT NULL,
    mobile            VARCHAR(10)          NOT NULL,
    email             VARCHAR(100)         NOT NULL,
    last_updated_time TIMESTAMP              NULL,
    CONSTRAINT pk_profiles PRIMARY KEY (profile_id)
);

ALTER TABLE skilltracker.profiles
    ADD CONSTRAINT uc_profiles_associate UNIQUE (associate_id);
