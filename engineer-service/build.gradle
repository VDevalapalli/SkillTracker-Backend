plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
}

group = 'com.iiht.fse4.skilltracker.engineer'
version = '1.0.0'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}
ext {
	baseVersion = "1.0.0"
	springCloudVersion = "2021.0.4"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.cloud:spring-cloud-openfeign-core'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper:9.0.73'

	runtimeOnly 'org.postgresql:postgresql'

	//implementation 'mysql:mysql-connector-java'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'


	testRuntimeOnly 'com.h2database:h2:2.1.214'

	implementation group: 'javax.validation', name: 'validation-api', version: '2.0.0.Final'

	implementation project(':common-library')

	//Spring Doc
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.12'
	implementation 'org.springdoc:springdoc-openapi-data-rest:1.6.12'



//	implementation 'org.axonframework:axon-spring-boot-starter:4.6.2'
//	implementation 'org.axonframework.extensions.mongo:axon-mongo:4.6.0'

	implementation 'org.springframework.kafka:spring-kafka'
	testImplementation 'org.springframework.kafka:spring-kafka-test'

	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'com.google.code.gson:gson:2.6.2'

	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	//AWS Dependencies
	//implementation 'com.amazonaws.serverless:aws-serverless-java-container-springboot2'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
